export WebappHome=/Users/nikolastheodoropoulos/Documents/Robotical/marty-web-app
export MBHome=/Users/nikolastheodoropoulos/Documents/Robotical/MartyBlocks

export mblib=$MBHome/marty-blocks-lib/
export REPLACEMENTS=$MBHome/marty-blocks-lib/replacements
export blocks_original=$MBHome/scratch-blocks
export vm_original=$MBHome/scratch-vm
export gui_original=$MBHome/scratch-gui
alias cdhome='cd $MBHome'
alias sourceMBProf='cdhome && source martyBlocksCliProfile'
export PATH=$(pyenv root)/shims:$PATH

npmlinkAll() {
    # local type="${1:-all"}
    cd $mblib && npm link
    cd $blocks_original && npm link && npm link marty-blocks-lib
    cd $vm_original && npm link && npm link marty-blocks-lib scratch-blocks
    cd $gui_original && npm link marty-blocks-lib scratch-blocks scratch-vm
}


buildAllAndCpToWebApp () {
    local type="${1:-all}"
    cpReplacements
    buildScratch $type
    cpToDist
    cpToWebapp
}

buildAllAndStart () {
    local type="${1:-all}"
    cpReplacements
    buildScratch $type
    cd $gui_original
    npm start
}

cpReplacements ()
{
    cp -r $REPLACEMENTS/* $MBHome
}

buildScratch () {
    local type="${1:-all}"
    if [ $type = all ]; then buildBlocks; buildVm; buildGui; fi
    if [ $type = blocks ]; then buildBlocks; fi
    if [ $type = vm ]; then buildBlocks; buildVm; fi
    if [ $type = gui ]; then buildGui; fi
}

cpToWebapp () {
    rm -rf $WebappHome/public/MartyBlocks/*
    cp -r $gui_original/build/* $WebappHome/public/MartyBlocks
}

cpToDist () {
    cdhome
    rm -rf dist/*
    cp -r $gui_original/build/* ./dist
}

buildBlocks() {
    cd $blocks_original && npm run prepublish
}

buildVm() {
    cd $vm_original && npm run build
}

buildGui() {
    cd $gui_original && BUILD_MODE=dist npm run build
}

publishPackage() {
    cdhome;
    rm -rf dist;
    mkdir dist;
    cp -r $gui_original/build/* dist/;
    npm publish;
}